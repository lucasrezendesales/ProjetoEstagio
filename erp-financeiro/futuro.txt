generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model registers {
  fk_user_id                Int
  fk_bankaccount_holder_id  Int
  user                      user                @relation(fields: [fk_user_id], references: [id], onUpdate: NoAction, map: "fk_registers_1")
  bankaccount_holder        bankaccount_holder  @relation(fields: [fk_bankaccount_holder_id], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "fk_registers_2")

  @@id([fk_user_id, fk_bankaccount_holder_id])
}

model bankaccount_holder {
  id                 Int               @id @default(autoincrement())
  name               String?           @db.VarChar(100)
  bank               String?           @db.VarChar(100)
  agency             String?           @db.VarChar(20)
  account            String?           @db.VarChar(20)
  balance            Decimal?          @db.Decimal(15, 2)
  active             Boolean?
  responsible_user   Int?
  registers          registers[]
  accountspayable    accountspayable[]
  accountsreceivable accountsreceivable[]
  cashflowentries    cashflowentries[]
  remittance         remittance[]
}

model accountspayable {
  id                           Int                     @id @default(autoincrement())
  document                     String?                 @db.VarChar(30)
  amount                       Decimal?                @db.Decimal(15, 2)
  amount_paid                  Decimal?                @db.Decimal(15, 2)
  issue_date                   DateTime?               @db.Date
  due_date                     DateTime?               @db.Date
  payment_date                 DateTime?               @db.Date
  status                       String?                 @db.VarChar(20)
  fk_user_id                   Int?
  fk_bankaccount_holder_id     Int?
  fk_paymentmethod_id          Int?
  fk_incominginvoice_id        Int?
  fk_billing_id                Int?
  user                         user?                   @relation(fields: [fk_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountspayable_2")
  bankaccount_holder           bankaccount_holder?     @relation(fields: [fk_bankaccount_holder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountspayable_3")
  paymentmethod                paymentmethod?          @relation(fields: [fk_paymentmethod_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountspayable_4")
  incominginvoice              incominginvoice?        @relation(fields: [fk_incominginvoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountspayable_5")
  billing                      billing?                @relation(fields: [fk_billing_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountspayable_6")
}

model accountsreceivable {
  id                           Int                     @id @default(autoincrement())
  document                     String?                 @db.VarChar(30)
  amount                       Decimal?                @db.Decimal(15, 2)
  amount_received              Decimal?                @db.Decimal(15, 2)
  issue_date                   DateTime?               @db.Date
  due_date                     DateTime?               @db.Date
  receipt_date                 DateTime?               @db.Date
  status                       String?                 @db.VarChar(20)
  fk_user_id                   Int?
  fk_bankaccount_holder_id     Int?
  fk_paymentmethod_id          Int?
  fk_outgoinginvoice_id        Int?
  fk_billing_id                Int?
  user                         user?                   @relation(fields: [fk_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountsreceivable_2")
  bankaccount_holder           bankaccount_holder?     @relation(fields: [fk_bankaccount_holder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountsreceivable_3")
  paymentmethod                paymentmethod?          @relation(fields: [fk_paymentmethod_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountsreceivable_4")
  outgoinginvoice              outgoinginvoice?        @relation(fields: [fk_outgoinginvoice_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountsreceivable_5")
  billing                      billing?                @relation(fields: [fk_billing_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_accountsreceivable_6")
}

model billing {
  id              Int            @id @default(autoincrement())
  start_date      DateTime?      @db.Date
  end_date        DateTime?      @db.Date
  total_received  Decimal?       @db.Decimal(15, 2)
  total_to_receive Decimal?      @db.Decimal(15, 2)
  total_paid      Decimal?       @db.Decimal(15, 2)
  total_to_pay    Decimal?       @db.Decimal(15, 2)
  final_balance   Decimal?       @db.Decimal(15, 2)
  status          String?        @db.VarChar(20)
  fk_user_id      Int?
  accountspayable accountspayable[]
  accountsreceivable accountsreceivable[]
  user            user?          @relation(fields: [fk_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_billing_2")
}

model paymentmethod {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar(100)
  fiscal_code     String?           @db.VarChar(20)
  accountspayable accountspayable[]
  accountsreceivable accountsreceivable[]
  outgoinginvoice outgoinginvoice[]
}

model cashflowentries {
  id                           Int                     @id @default(autoincrement())
  type                         String?                 @db.VarChar(20)
  amount                       Decimal?                @db.Decimal(15, 2)
  date                         DateTime?               @db.Date
  description                  String?                 @db.VarChar(100)
  reference_document           String?                 @db.VarChar(30)
  reconciled                   Boolean?
  fk_user_id                   Int?
  fk_bankaccount_holder_id     Int?
  user                         user?                   @relation(fields: [fk_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cashflowentries_2")
  bankaccount_holder           bankaccount_holder?     @relation(fields: [fk_bankaccount_holder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_cashflowentries_3")
}

model incominginvoice {
  id           Int          @id @default(autoincrement())
  number       String?      @db.VarChar(20)
  series       String?      @db.VarChar(10)
  issue_date   DateTime?    @db.Date
  entry_date   DateTime?    @db.Date
  total_amount Decimal?     @db.Decimal(15, 2)
  access_key   String?      @db.VarChar(44)
  status       String?      @db.VarChar(20)
  accountspayable accountspayable[]
}

model outgoinginvoice {
  id                   Int             @id @default(autoincrement())
  number               String?         @db.VarChar(20)
  series               String?         @db.VarChar(10)
  issue_date           DateTime?       @db.Date
  total_amount         Decimal?        @db.Decimal(15, 2)
  access_key           String?         @db.VarChar(44)
  status               String?         @db.VarChar(20)
  fk_paymentmethod_id  Int?
  accountsreceivable   accountsreceivable[]
  paymentmethod        paymentmethod?  @relation(fields: [fk_paymentmethod_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_outgoinginvoice_2")
}

model remittance {
  id                           Int                     @id @default(autoincrement())
  generation_date              DateTime?               @db.Date
  send_date                    DateTime?               @db.Date
  titles_quantity              Int?
  total_amount                 Decimal?                @db.Decimal(15, 2)
  status                       String?                 @db.VarChar(20)
  file                         String?                 @db.VarChar(255)
  fk_bankaccount_holder_id     Int?
  bankaccount_holder           bankaccount_holder?     @relation(fields: [fk_bankaccount_holder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_remittance_2")
}

model user {
  id                Int               @id @default(autoincrement())
  username          String?           @unique @db.VarChar(50)
  email             String?           @unique @db.VarChar(100)
  password          String?           @db.VarChar(255)
  full_name         String?           @db.VarChar(100)
  active            Boolean?
  creation_date     DateTime?         @db.Timestamp(6)
  last_login        DateTime?         @db.Timestamp(6)
  role              String?           @db.VarChar(50)
  recovery_token    String?           @db.VarChar(255)
  token_expiry      DateTime?         @db.Timestamp(6)
  login_attempts    Int?              @default(0)
  lock_until        DateTime?         @db.Timestamp(6)
  registers         registers[]
  accountspayable   accountspayable[]
  accountsreceivable accountsreceivable[]
  billing           billing[]
  cashflowentries   cashflowentries[]
}